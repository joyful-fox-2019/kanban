{"remainingRequest":"/Users/angelavanessa/development/hacktiv8/phase2/week3/kanban/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/angelavanessa/development/hacktiv8/phase2/week3/kanban/src/components/TaskDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/angelavanessa/development/hacktiv8/phase2/week3/kanban/src/components/TaskDetail.vue","mtime":1573705803000},{"path":"/Users/angelavanessa/development/hacktiv8/phase2/week3/kanban/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/angelavanessa/development/hacktiv8/phase2/week3/kanban/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/angelavanessa/development/hacktiv8/phase2/week3/kanban/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/angelavanessa/development/hacktiv8/phase2/week3/kanban/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkYiBmcm9tICdAL2NvbmZpZy9maXJlYmFzZS5qcycKZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YSAoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICB9CiAgICB9LAogICAgcHJvcHM6IFsndGFza0luTW9kYWwnLCAndXBkYXRlT3B0aW9ucyddLAogICAgbWV0aG9kcyA6IHsKICAgICAgICBkZWxldGVUYXNrKGlkKSB7CiAgICAgICAgICAgIGRiLmNvbGxlY3Rpb24oJ3Rhc2tzJykuZG9jKGlkKS5kZWxldGUoKTsKICAgICAgICB9LAogICAgICAgIHVwZGF0ZVRhc2tUbyh0YXNrSWQsIGNhdGVnb3J5U3RhdHVzKSB7CiAgICAgICAgICAgIGxldCBjYXRlZ29yeSA9IHRoaXMudGFza0luTW9kYWwuY2F0ZWdvcmllcy5maWx0ZXIoaXRlbSA9PiBpdGVtLnN0YXR1cyA9PT0gY2F0ZWdvcnlTdGF0dXMpOwogICAgICAgICAgICBsZXQgdGFzayA9IGRiLmNvbGxlY3Rpb24oJ3Rhc2tzJykuZG9jKHRhc2tJZCk7CiAgICAgICAgICAgIHRhc2sudXBkYXRlKHtzdGF0dXM6IGNhdGVnb3J5WzBdLmlkfSk7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["TaskDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TaskDetail.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"modal fade\" id=\"taskModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"taskModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"taskModalLabel\">\n                            Detail task: {{ taskInModal.task.title }} for {{ taskInModal.task.assignTo }}\n                        </h5>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <strong>Task Description: </strong>\n                        <p>{{ taskInModal.task.description }}</p>\n                        <strong>Point: </strong>\n                        <p>{{ taskInModal.task.point }}</p>\n                        <strong>Status: </strong>\n                        <p>{{ taskInModal.currentCategory.name }}</p>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button \n                            v-if=\"updateOptions[0] !== ''\" \n                            class=\"btn btn-primary\"\n                            @click.prevent=\"updateTaskTo(taskInModal.task.id, updateOptions[0])\"\n                            data-dismiss=\"modal\">\n                            {{ taskInModal.categories[updateOptions[0]].name }}\n                        </button>\n                        <button type=\"button\" class=\"btn btn-primary\" @click.prevent=\"deleteTask(taskInModal.task.id)\" data-dismiss=\"modal\">Delete</button>\n                        <button \n                            v-if=\"updateOptions[1] !== ''\" \n                            class=\"btn btn-primary\"\n                            @click.prevent=\"updateTaskTo(taskInModal.task.id, updateOptions[1])\"\n                            data-dismiss=\"modal\">\n                            {{ taskInModal.categories[updateOptions[1]].name }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n</template>\n\n<script>\nimport db from '@/config/firebase.js'\nexport default {\n    data () {\n        return {\n        }\n    },\n    props: ['taskInModal', 'updateOptions'],\n    methods : {\n        deleteTask(id) {\n            db.collection('tasks').doc(id).delete();\n        },\n        updateTaskTo(taskId, categoryStatus) {\n            let category = this.taskInModal.categories.filter(item => item.status === categoryStatus);\n            let task = db.collection('tasks').doc(taskId);\n            task.update({status: category[0].id});\n        }\n    }\n}\n</script>\n"]}]}